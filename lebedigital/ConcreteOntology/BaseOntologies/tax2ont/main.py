import pandas as pd
import shutil
import pathlib
import os

# made by mattheo krueger (mattheo-benedikt.krueger@bam.de) for the project lebedigital

# change the prefix if ontology prefix changes
Prefix = "http://www.semanticweb.org/mkrueger/ontologies/2023/4/untitled-ontology-47/"
# Prefix of the Annotation Property used for definition
PrefixDef = "http://www.w3.org/ns/prov#definition"
# Prefix of the Annotation Property used for definition source
PrefixDefSource = "https://w3id.org/pmd/co/definitionSource"
NameExcelFile = "Taxo.xlsx"


# welcome message
print("Hi, this tool is for converting a taxonomy from an Excel file to an ontology.")
# Eingabe Aufforderung
wahl = input('Do you want to add to a already existing Ontology (Press "1") or use a blank template (Press "2")?')
# if 1 then clean the current file
if wahl == "1":
    input('Please put the current Ontology in the current folder and name it "Current.owl". Press any key to continue.')
    # define input and output file
    infile = "Current.owl"
    outfile = "Temporary.owl"
    # last row of input file must be deleted
    delete_list = ["###  Generated by the OWL API (version 4.5.9.2019-02-01T07:24:44Z) https://github.com/owlcs/owlapi"]
    fin = open(infile)
    fout = open(outfile, "w+")
    for line in fin:
        for word in delete_list:
            line = line.replace(word, "")
        fout.write(line)
    fin.close()
    fout.close()
    # delete the last empty lines
    with open(outfile, "r+", encoding="utf-8") as file:

        # Move the pointer (similar to a cursor in a text editor) to the end of the file
        file.seek(0, os.SEEK_END)

        # This code means the following code skips the very last character in the file -
        # i.e. in the case the last line is null we delete the last line
        # and the penultimate one
        pos = file.tell() - 1

        # Read each character in the file one at a time from the penultimate
        # character going backwards, searching for a newline character
        # If we find a new line, exit the search
        while pos > 0 and file.read(1) != "\n":
            pos -= 1
            file.seek(pos, os.SEEK_SET)

        # So long as we're not at the start of the file, delete all the characters ahead
        # of this position
        if pos > 0:
            file.seek(pos, os.SEEK_SET)
            file.truncate()
    # set the template variable to the temporary.owl
    TemplateVar = str("\Temporary.owl")
else:
    TemplateVar = str("\Template.owl")
# get the current path the script is running in
Path = pathlib.Path().resolve()
# define the Path of Template and Output file
Template = str(Path) + TemplateVar
Output = str(Path) + "\Output.owl"

# copy the template to output file
shutil.copyfile(Template, Output)

# Load the excel file as dataframe
df = pd.read_excel(NameExcelFile)

# Create an empty list
Row_list = []

# Iterate over each row
for index, rows in df.iterrows():
    # Create list for the current row
    my_list = [rows.Entity, rows.Labelen, rows.Labelde, rows.definitionen, rows.definitionde, rows.Sourceen, rows.Sourcede, rows.Bemerkungen]

    # append the list to the final list
    Row_list.append(my_list)

# Get Length of the excel file
Passes = len(Row_list)

# open owl file
ont = open("Output.owl", "a")


# for loop for every element in Row_list
for i in range(0, Passes):

    # get information from current row
    RowInfo = Row_list[i]
    # add classes to ontology
    Text1 = '###  '+ Prefix + str(RowInfo[0]) + '\n'
    Text2 = '<'+ Prefix +str(RowInfo[0])+'> rdf:type owl:Class ;' + '\n'
    Text3 = '                                                                                  <'+PrefixDef+'> "'+str(RowInfo[4])+'"@de ,' + '\n'
    Text4 = '                                                                                                                                                                          "'+str(RowInfo[3])+'"@en ;' + '\n'
    Text5 = '                                                                                  <'+PrefixDefSource+'> "'+str(RowInfo[6])+'"@de ,' + '\n'
    Text6 = '                                                                                                                                                                      "'+str(RowInfo[5])+'"@en ;' + '\n'
    Text7 = '                                                                                  rdfs:comment "'+str(RowInfo[7])+'"@en ;' + '\n'
    Text8 = '                                                                                  rdfs:label "'+str(RowInfo[2])+'"@de ,' + '\n'
    Text9 = '                                                                                             "'+str(RowInfo[1])+'"@en .' + '\n\n'
    ont.write(Text1)
    ont.write(Text2)
    ont.write(Text3)
    ont.write(Text4)
    ont.write(Text5)
    ont.write(Text6)
    ont.write(Text7)
    ont.write(Text8)
    ont.write(Text9)

# add last string of owl
Final = "\n###  Generated by the OWL API (version 4.5.9.2019-02-01T07:24:44Z) https://github.com/owlcs/owlapi"
ont.write(Final)

# delete temporary file
if wahl == "1":
    TempPath = str(Path) + "\Temporary.owl"
    os.remove(TempPath)