name: lebedigital workflow of building knowledge graph and running calibration

on: [push]

jobs:
  build-knowledge-graph:
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo content
        uses: actions/checkout@v2
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: create data folder
        run: |
          mkdir ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/emodul/E-modul-processed-data/
          mkdir ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/emodul/E-modul-processed-data/rawdata 
          mkdir ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/emodul/E-modul-processed-data/processeddata
          ls ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/emodul/E-modul-processed-data/

          mkdir ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/compression/compression-processed-data/
          mkdir ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/compression/compression-processed-data/rawdata 
          mkdir ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/compression/compression-processed-data/processeddata
          ls ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/compression/compression-processed-data/
      - name: install chowlk and convert drawio to ontology xml
        run: |
          git clone https://github.com/firmao/bamChowlk
          cd bamChowlk
          pip install -r requirements.txt
          python converter.py ${GITHUB_WORKSPACE}/usecases/Concrete/ConcreteOntology/EM.drawio ${GITHUB_WORKSPACE}/usecases/Concrete/ConcreteOntology/EM.xml --type ontology --format xml
          ls ${GITHUB_WORKSPACE}/usecases/Concrete/ConcreteOntology

          python converter.py ${GITHUB_WORKSPACE}/usecases/Concrete/ConcreteOntology/compression_cyl.drawio ${GITHUB_WORKSPACE}/usecases/Concrete/ConcreteOntology/compression_cyl.xml --type ontology --format xml
          ls ${GITHUB_WORKSPACE}/usecases/Concrete/ConcreteOntology
      - name: install python packages
        uses: py-actions/py-dependency-install@v2
        with:
          path: "usecases/Concrete/knowledgeGraph/requirements.txt"
      - name: execute extract generate processed data script
        run: |
          python usecases/Concrete/knowledgeGraph/emodul/emodul_generate_processed_data.py
          echo "list of all clean raw data (no header)"
          ls ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/emodul/E-modul-processed-data/rawdata
          echo "list of all clean processed data from raw data, that contains 4 columns with meaningful names"
          ls ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/emodul/E-modul-processed-data/processeddata

          python usecases/Concrete/knowledgeGraph/compression/compression_generate_processed_data.py
          echo "list of all clean raw data (no header)"
          ls ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/compression/compression-processed-data/rawdata
          echo "list of all clean processed data from raw data, that contains 4 columns with meaningful names"
          ls ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/compression/compression-processed-data/processeddata
      - name: execute extract metadata script
        run: |
          python usecases/Concrete/knowledgeGraph/emodul/emodul_metadata_extraction.py
          python usecases/Concrete/knowledgeGraph/emodul/emodul_calculation.py
          ls ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/emodul/E-modul-processed-data/

          python usecases/Concrete/knowledgeGraph/compression/compression_metadata_extraction.py
          python usecases/Concrete/knowledgeGraph/compression/compression_calculation.py
          ls ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/compression/compression-processed-data/
      - name: execute mapping script
        run: |
          python usecases/Concrete/knowledgeGraph/emodul/emodul_mapping.py
          ls ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/emodul/E-modul-processed-data/

          python usecases/Concrete/knowledgeGraph/compression/compression_mapping.py
          ls ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/compression/compression-processed-data/
      - name: initialize docker container for shacl validation
        run: |
          git clone https://github.com/Mat-O-Lab/RDFConverter.git
          docker-compose -f RDFConverter/docker-compose.yml up -d app
      - name: validate emodul data against shacl shape
        run: |
          sleep 1
          passed=()
          failed=()
          for rdf_file in ${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/emodul/E-modul-processed-data/*.ttl
          do 
            RESULT=$(curl -v -F "rdf=@$rdf_file" -F "shaclShape=@${GITHUB_WORKSPACE}/usecases/Concrete/knowledgeGraph/shape.ttl" "http://localhost:8080/rdfconv/validate")
              if [ "$RESULT" != "VALID" ]
              then
                failed+=($rdf_file)
              else
                passed+=($rdf_file)
              fi
          done
          echo "files that passed shacl validation:"
          for passed_file in passed
          do
            echo $passed_file
          done
          echo "files that failed shacl validation:"
          for failed_file in failed
          do
            echo $failed_file
          done
      - name: execute test query script
        run: |
          python usecases/Concrete/knowledgeGraph/emodul/emodul_test.py

          python usecases/Concrete/knowledgeGraph/compression/compression_test.py

      - name: execute emodul calibration script
        run: |
          python usecases/Concrete/Calibration/E_modul_calibration.py
